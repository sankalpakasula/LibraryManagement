diff --git a/node_modules/mongodb/package.json b/node_modules/mongodb/package.json
index 5427183..092592d 100644
--- a/node_modules/mongodb/package.json
+++ b/node_modules/mongodb/package.json
@@ -9,6 +9,12 @@
   "types": "lib/index.d.ts",
   "repository": "mongodb/node-mongodb-native",
   "files": [
+    "lib/",
+    "!lib/client-side-encryption/"
+  ],
+  "browser": {
+    "./lib/client-side-encryption/index.js": false
+  },
+  "//files": [
     "lib/",
     "etc/",
     "src/"
diff --git a/node_modules/mongodb/lib/client-side-encryption/mongocryptd_manager.js b/node_modules/mongodb/lib/client-side-encryption/mongocryptd_manager.js
index c6b7c53..004c81b 100644
--- a/node_modules/mongodb/lib/client-side-encryption/mongocryptd_manager.js
+++ b/node_modules/mongodb/lib/client-side-encryption/mongocryptd_manager.js
@@ -1,5 +1,5 @@
 "use strict";
-Object.defineProperty(exports, "__esModule", { value: true });
+/*Object.defineProperty(exports, "__esModule", { value: true });
 exports.MongocryptdManager = void 0;
 const URI_EVENT_NAMES = [
     'mongocryptd:closed',
@@ -32,7 +32,7 @@ class MongocryptdManager {
             throw new error_1.MongoCryptInvalidArgumentError(`Expected a string for "mongocryptdURI", but got ${typeof this.uri}`);
         }
     }
-    [Symbol.for('nodejs.util.inspect.custom')]() {
+    /*[Symbol.for('nodejs.util.inspect.custom')]() {
         return this.inspect();
     }
     inspect() {
@@ -42,10 +42,10 @@ class MongocryptdManager {
             uri: this.uri
         };
     }
-}
+}*/
 exports.MongocryptdManager = MongocryptdManager;
 //# sourceMappingURL=mongocryptd_manager.js.map
-const error_1 = require("../error");
+//const error_1 = require("../error");
 
 
-var __debug = require('util').debuglog('mongodb:mongocryptd');
+//var __debug = require('util').debuglog('mongodb:mongocryptd');
\ No newline at end of file
